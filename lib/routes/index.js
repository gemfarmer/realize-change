// Generated by CoffeeScript 1.6.3
(function() {
  var paypal;

  paypal = require('paypal-rest-sdk');

  exports.index = function(req, res) {
    return res.render('index', {
      title: app.locals.config.title,
      subtitle: app.locals.config.subtitle
    });
  };

  exports.main = function(req, res) {
    return res.render('index', {
      title: app.locals.config.title,
      subtitle: app.locals.config.subtitle,
      username: req.user.name,
      200: 200
    });
  };

  exports.answers = function(req, res) {
    var renderObj;
    req.session.redirectURL = req.url;
    renderObj = {};
    renderObj.title = app.locals.config.title;
    renderObj.subtitle = app.locals.config.subtitle;
    renderObj.apikey = 'AIzaSyB_e3Hr9YXDi4P4JLX53yZOIr1Osz7L-_U';
    if (req.user === void 0) {
      return res.render("partials/answers", renderObj);
    } else {
      renderObj.username = req.user.name;
      return res.render("partials/answers", renderObj);
    }
  };

  exports.seeanswers = function(req, res) {
    var renderObj;
    req.session.redirectURL = req.url;
    renderObj = {};
    renderObj.title = app.locals.config.title;
    renderObj.subtitle = app.locals.config.subtitle;
    if (req.user === void 0) {
      return res.render("partials/seeanswers", renderObj);
    } else {
      renderObj.username = req.user.name;
      return res.render("partials/seeanswers", renderObj);
    }
  };

  exports.rank = function(req, res) {
    var renderObj;
    req.session.redirectURL = req.url;
    console.log("hey");
    renderObj = {};
    renderObj.title = app.locals.config.title;
    renderObj.subtitle = app.locals.config.subtitle;
    if (req.user === void 0) {
      return res.render("partials/rank", renderObj);
    } else {
      renderObj.username = req.user.name;
      return res.render("partials/rank", renderObj);
    }
  };

  exports.results = function(req, res) {
    var renderObj;
    req.session.redirectURL = req.url;
    console.log("hey");
    renderObj = {};
    renderObj.title = app.locals.config.title;
    renderObj.subtitle = app.locals.config.subtitle;
    if (req.user === void 0) {
      return res.render("partials/results", renderObj);
    } else {
      renderObj.username = req.user.name;
      return res.render("partials/results", renderObj);
    }
  };

  exports.mission = function(req, res) {
    req.session.redirectURL = req.url;
    console.log("reached mission");
    return res.render('partials/mission', {
      title: app.locals.config.title,
      subtitle: app.locals.config.subtitle
    });
  };

  exports.paypalindex = function(req, res) {
    return res.render('paypals/paypalindex');
  };

  exports.create = function(req, res) {
    var funding_instruments, method, payment;
    method = req.param('method');
    payment = {
      "intent": "sale",
      "payer": {},
      "transactions": [
        {
          "amount": {
            "currency": req.param('currency'),
            "total": req.param('amount')
          },
          "description": req.param('description')
        }
      ]
    };
    if (method === 'paypal') {
      payment.payer.payment_method = 'paypal';
      payment.redirect_urls = {
        "return_url": config.paypal.returnURL,
        "cancel_url": config.paypal.cancelURL
      };
    } else if (method === 'credit_card') {
      funding_instruments = [
        {
          "credit_card": {
            "type": req.param('type').toLowerCase(),
            "number": req.param('number'),
            "expire_month": req.param('expire_month'),
            "expire_year": req.param('expire_year'),
            "first_name": req.param('first_name'),
            "last_name": req.param('last_name')
          }
        }
      ];
      payment.payer.payment_method = 'credit_card';
      payment.payer.funding_instruments = funding_instruments;
    }
    return paypal.payment.create(payment, function(error, payment) {
      if (error) {
        console.log(error);
        return res.render('paypals/error', {
          'error': error
        });
      } else {
        req.session.paymentId = payment.id;
        return res.render('paypals/create', {
          'payment': payment
        });
      }
    });
  };

  exports.execute = function(req, res) {
    var details, payerId, payment, paymentId;
    paymentId = req.session.paymentId;
    payerId = req.param('PayerID');
    details = {
      "payer_id": payerId
    };
    return payment = paypal.payment.execute(paymentId, details, function(error, payment) {
      if (error) {
        console.log(error);
        return res.render('paypals/error', {
          'error': error
        });
      } else {
        return res.render('paypals/execute', {
          'payment': payment
        });
      }
    });
  };

  exports.cancel = function(req, res) {
    return res.render('paypals/cancel');
  };

  exports.init = function(c) {
    var config;
    config = c;
    return paypal.configure(c.api);
  };

}).call(this);
